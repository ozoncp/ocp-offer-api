// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ozoncp/ocp-offer-api/internal/producer (interfaces: IProducer)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	models "github.com/ozoncp/ocp-offer-api/internal/models"
)

// MockIProducer is a mock of IProducer interface.
type MockIProducer struct {
	ctrl     *gomock.Controller
	recorder *MockIProducerMockRecorder
}

// MockIProducerMockRecorder is the mock recorder for MockIProducer.
type MockIProducerMockRecorder struct {
	mock *MockIProducer
}

// NewMockIProducer creates a new mock instance.
func NewMockIProducer(ctrl *gomock.Controller) *MockIProducer {
	mock := &MockIProducer{ctrl: ctrl}
	mock.recorder = &MockIProducerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIProducer) EXPECT() *MockIProducerMockRecorder {
	return m.recorder
}

// CreateOffer mocks base method.
func (m *MockIProducer) CreateOffer(arg0 models.Offer) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateOffer", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateOffer indicates an expected call of CreateOffer.
func (mr *MockIProducerMockRecorder) CreateOffer(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateOffer", reflect.TypeOf((*MockIProducer)(nil).CreateOffer), arg0)
}

// DeleteOffer mocks base method.
func (m *MockIProducer) DeleteOffer(arg0 uint64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteOffer", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteOffer indicates an expected call of DeleteOffer.
func (mr *MockIProducerMockRecorder) DeleteOffer(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteOffer", reflect.TypeOf((*MockIProducer)(nil).DeleteOffer), arg0)
}

// UpdateOffer mocks base method.
func (m *MockIProducer) UpdateOffer(arg0 models.Offer) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateOffer", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateOffer indicates an expected call of UpdateOffer.
func (mr *MockIProducerMockRecorder) UpdateOffer(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateOffer", reflect.TypeOf((*MockIProducer)(nil).UpdateOffer), arg0)
}
