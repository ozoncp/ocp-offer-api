// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package ocp_offer_api

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// OcpOfferApiServiceClient is the client API for OcpOfferApiService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type OcpOfferApiServiceClient interface {
	// CreateOfferV1 - Create an offer
	CreateOfferV1(ctx context.Context, in *CreateOfferV1Request, opts ...grpc.CallOption) (*CreateOfferV1Response, error)
	// TaskCreateOfferV1 - Create an offer
	TaskCreateOfferV1(ctx context.Context, in *TaskCreateOfferV1Request, opts ...grpc.CallOption) (*TaskCreateOfferV1Response, error)
	// MultiCreateOfferV1 - Multiple offer creation
	MultiCreateOfferV1(ctx context.Context, in *MultiCreateOfferV1Request, opts ...grpc.CallOption) (*MultiCreateOfferV1Response, error)
	// TaskMultiCreateOfferV1 - Multiple offer creation
	TaskMultiCreateOfferV1(ctx context.Context, in *TaskMultiCreateOfferV1Request, opts ...grpc.CallOption) (*TaskMultiCreateOfferV1Response, error)
	// DescribeOfferV1 - Get information about the offer
	DescribeOfferV1(ctx context.Context, in *DescribeOfferV1Request, opts ...grpc.CallOption) (*DescribeOfferV1Response, error)
	// ListOfferV1 - Gets a list of offers
	ListOfferV1(ctx context.Context, in *ListOfferV1Request, opts ...grpc.CallOption) (*ListOfferV1Response, error)
	// UpdateOfferV1 - Updates the offer
	UpdateOfferV1(ctx context.Context, in *UpdateOfferV1Request, opts ...grpc.CallOption) (*UpdateOfferV1Response, error)
	// TaskUpdateOfferV1 - Updates the offer
	TaskUpdateOfferV1(ctx context.Context, in *TaskUpdateOfferV1Request, opts ...grpc.CallOption) (*TaskUpdateOfferV1Response, error)
	// RemoveOfferV1 - Removes offer
	RemoveOfferV1(ctx context.Context, in *RemoveOfferV1Request, opts ...grpc.CallOption) (*RemoveOfferV1Response, error)
	// TaskRemoveOfferV1 - Removes offer
	TaskRemoveOfferV1(ctx context.Context, in *TaskRemoveOfferV1Request, opts ...grpc.CallOption) (*TaskRemoveOfferV1Response, error)
}

type ocpOfferApiServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewOcpOfferApiServiceClient(cc grpc.ClientConnInterface) OcpOfferApiServiceClient {
	return &ocpOfferApiServiceClient{cc}
}

func (c *ocpOfferApiServiceClient) CreateOfferV1(ctx context.Context, in *CreateOfferV1Request, opts ...grpc.CallOption) (*CreateOfferV1Response, error) {
	out := new(CreateOfferV1Response)
	err := c.cc.Invoke(ctx, "/ocp.offer.api.OcpOfferApiService/CreateOfferV1", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ocpOfferApiServiceClient) TaskCreateOfferV1(ctx context.Context, in *TaskCreateOfferV1Request, opts ...grpc.CallOption) (*TaskCreateOfferV1Response, error) {
	out := new(TaskCreateOfferV1Response)
	err := c.cc.Invoke(ctx, "/ocp.offer.api.OcpOfferApiService/TaskCreateOfferV1", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ocpOfferApiServiceClient) MultiCreateOfferV1(ctx context.Context, in *MultiCreateOfferV1Request, opts ...grpc.CallOption) (*MultiCreateOfferV1Response, error) {
	out := new(MultiCreateOfferV1Response)
	err := c.cc.Invoke(ctx, "/ocp.offer.api.OcpOfferApiService/MultiCreateOfferV1", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ocpOfferApiServiceClient) TaskMultiCreateOfferV1(ctx context.Context, in *TaskMultiCreateOfferV1Request, opts ...grpc.CallOption) (*TaskMultiCreateOfferV1Response, error) {
	out := new(TaskMultiCreateOfferV1Response)
	err := c.cc.Invoke(ctx, "/ocp.offer.api.OcpOfferApiService/TaskMultiCreateOfferV1", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ocpOfferApiServiceClient) DescribeOfferV1(ctx context.Context, in *DescribeOfferV1Request, opts ...grpc.CallOption) (*DescribeOfferV1Response, error) {
	out := new(DescribeOfferV1Response)
	err := c.cc.Invoke(ctx, "/ocp.offer.api.OcpOfferApiService/DescribeOfferV1", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ocpOfferApiServiceClient) ListOfferV1(ctx context.Context, in *ListOfferV1Request, opts ...grpc.CallOption) (*ListOfferV1Response, error) {
	out := new(ListOfferV1Response)
	err := c.cc.Invoke(ctx, "/ocp.offer.api.OcpOfferApiService/ListOfferV1", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ocpOfferApiServiceClient) UpdateOfferV1(ctx context.Context, in *UpdateOfferV1Request, opts ...grpc.CallOption) (*UpdateOfferV1Response, error) {
	out := new(UpdateOfferV1Response)
	err := c.cc.Invoke(ctx, "/ocp.offer.api.OcpOfferApiService/UpdateOfferV1", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ocpOfferApiServiceClient) TaskUpdateOfferV1(ctx context.Context, in *TaskUpdateOfferV1Request, opts ...grpc.CallOption) (*TaskUpdateOfferV1Response, error) {
	out := new(TaskUpdateOfferV1Response)
	err := c.cc.Invoke(ctx, "/ocp.offer.api.OcpOfferApiService/TaskUpdateOfferV1", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ocpOfferApiServiceClient) RemoveOfferV1(ctx context.Context, in *RemoveOfferV1Request, opts ...grpc.CallOption) (*RemoveOfferV1Response, error) {
	out := new(RemoveOfferV1Response)
	err := c.cc.Invoke(ctx, "/ocp.offer.api.OcpOfferApiService/RemoveOfferV1", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ocpOfferApiServiceClient) TaskRemoveOfferV1(ctx context.Context, in *TaskRemoveOfferV1Request, opts ...grpc.CallOption) (*TaskRemoveOfferV1Response, error) {
	out := new(TaskRemoveOfferV1Response)
	err := c.cc.Invoke(ctx, "/ocp.offer.api.OcpOfferApiService/TaskRemoveOfferV1", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OcpOfferApiServiceServer is the server API for OcpOfferApiService service.
// All implementations must embed UnimplementedOcpOfferApiServiceServer
// for forward compatibility
type OcpOfferApiServiceServer interface {
	// CreateOfferV1 - Create an offer
	CreateOfferV1(context.Context, *CreateOfferV1Request) (*CreateOfferV1Response, error)
	// TaskCreateOfferV1 - Create an offer
	TaskCreateOfferV1(context.Context, *TaskCreateOfferV1Request) (*TaskCreateOfferV1Response, error)
	// MultiCreateOfferV1 - Multiple offer creation
	MultiCreateOfferV1(context.Context, *MultiCreateOfferV1Request) (*MultiCreateOfferV1Response, error)
	// TaskMultiCreateOfferV1 - Multiple offer creation
	TaskMultiCreateOfferV1(context.Context, *TaskMultiCreateOfferV1Request) (*TaskMultiCreateOfferV1Response, error)
	// DescribeOfferV1 - Get information about the offer
	DescribeOfferV1(context.Context, *DescribeOfferV1Request) (*DescribeOfferV1Response, error)
	// ListOfferV1 - Gets a list of offers
	ListOfferV1(context.Context, *ListOfferV1Request) (*ListOfferV1Response, error)
	// UpdateOfferV1 - Updates the offer
	UpdateOfferV1(context.Context, *UpdateOfferV1Request) (*UpdateOfferV1Response, error)
	// TaskUpdateOfferV1 - Updates the offer
	TaskUpdateOfferV1(context.Context, *TaskUpdateOfferV1Request) (*TaskUpdateOfferV1Response, error)
	// RemoveOfferV1 - Removes offer
	RemoveOfferV1(context.Context, *RemoveOfferV1Request) (*RemoveOfferV1Response, error)
	// TaskRemoveOfferV1 - Removes offer
	TaskRemoveOfferV1(context.Context, *TaskRemoveOfferV1Request) (*TaskRemoveOfferV1Response, error)
	mustEmbedUnimplementedOcpOfferApiServiceServer()
}

// UnimplementedOcpOfferApiServiceServer must be embedded to have forward compatible implementations.
type UnimplementedOcpOfferApiServiceServer struct {
}

func (UnimplementedOcpOfferApiServiceServer) CreateOfferV1(context.Context, *CreateOfferV1Request) (*CreateOfferV1Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateOfferV1 not implemented")
}
func (UnimplementedOcpOfferApiServiceServer) TaskCreateOfferV1(context.Context, *TaskCreateOfferV1Request) (*TaskCreateOfferV1Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TaskCreateOfferV1 not implemented")
}
func (UnimplementedOcpOfferApiServiceServer) MultiCreateOfferV1(context.Context, *MultiCreateOfferV1Request) (*MultiCreateOfferV1Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MultiCreateOfferV1 not implemented")
}
func (UnimplementedOcpOfferApiServiceServer) TaskMultiCreateOfferV1(context.Context, *TaskMultiCreateOfferV1Request) (*TaskMultiCreateOfferV1Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TaskMultiCreateOfferV1 not implemented")
}
func (UnimplementedOcpOfferApiServiceServer) DescribeOfferV1(context.Context, *DescribeOfferV1Request) (*DescribeOfferV1Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DescribeOfferV1 not implemented")
}
func (UnimplementedOcpOfferApiServiceServer) ListOfferV1(context.Context, *ListOfferV1Request) (*ListOfferV1Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListOfferV1 not implemented")
}
func (UnimplementedOcpOfferApiServiceServer) UpdateOfferV1(context.Context, *UpdateOfferV1Request) (*UpdateOfferV1Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateOfferV1 not implemented")
}
func (UnimplementedOcpOfferApiServiceServer) TaskUpdateOfferV1(context.Context, *TaskUpdateOfferV1Request) (*TaskUpdateOfferV1Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TaskUpdateOfferV1 not implemented")
}
func (UnimplementedOcpOfferApiServiceServer) RemoveOfferV1(context.Context, *RemoveOfferV1Request) (*RemoveOfferV1Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveOfferV1 not implemented")
}
func (UnimplementedOcpOfferApiServiceServer) TaskRemoveOfferV1(context.Context, *TaskRemoveOfferV1Request) (*TaskRemoveOfferV1Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TaskRemoveOfferV1 not implemented")
}
func (UnimplementedOcpOfferApiServiceServer) mustEmbedUnimplementedOcpOfferApiServiceServer() {}

// UnsafeOcpOfferApiServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to OcpOfferApiServiceServer will
// result in compilation errors.
type UnsafeOcpOfferApiServiceServer interface {
	mustEmbedUnimplementedOcpOfferApiServiceServer()
}

func RegisterOcpOfferApiServiceServer(s grpc.ServiceRegistrar, srv OcpOfferApiServiceServer) {
	s.RegisterService(&OcpOfferApiService_ServiceDesc, srv)
}

func _OcpOfferApiService_CreateOfferV1_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateOfferV1Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OcpOfferApiServiceServer).CreateOfferV1(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ocp.offer.api.OcpOfferApiService/CreateOfferV1",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OcpOfferApiServiceServer).CreateOfferV1(ctx, req.(*CreateOfferV1Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _OcpOfferApiService_TaskCreateOfferV1_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TaskCreateOfferV1Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OcpOfferApiServiceServer).TaskCreateOfferV1(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ocp.offer.api.OcpOfferApiService/TaskCreateOfferV1",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OcpOfferApiServiceServer).TaskCreateOfferV1(ctx, req.(*TaskCreateOfferV1Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _OcpOfferApiService_MultiCreateOfferV1_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MultiCreateOfferV1Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OcpOfferApiServiceServer).MultiCreateOfferV1(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ocp.offer.api.OcpOfferApiService/MultiCreateOfferV1",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OcpOfferApiServiceServer).MultiCreateOfferV1(ctx, req.(*MultiCreateOfferV1Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _OcpOfferApiService_TaskMultiCreateOfferV1_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TaskMultiCreateOfferV1Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OcpOfferApiServiceServer).TaskMultiCreateOfferV1(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ocp.offer.api.OcpOfferApiService/TaskMultiCreateOfferV1",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OcpOfferApiServiceServer).TaskMultiCreateOfferV1(ctx, req.(*TaskMultiCreateOfferV1Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _OcpOfferApiService_DescribeOfferV1_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DescribeOfferV1Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OcpOfferApiServiceServer).DescribeOfferV1(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ocp.offer.api.OcpOfferApiService/DescribeOfferV1",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OcpOfferApiServiceServer).DescribeOfferV1(ctx, req.(*DescribeOfferV1Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _OcpOfferApiService_ListOfferV1_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListOfferV1Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OcpOfferApiServiceServer).ListOfferV1(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ocp.offer.api.OcpOfferApiService/ListOfferV1",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OcpOfferApiServiceServer).ListOfferV1(ctx, req.(*ListOfferV1Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _OcpOfferApiService_UpdateOfferV1_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateOfferV1Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OcpOfferApiServiceServer).UpdateOfferV1(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ocp.offer.api.OcpOfferApiService/UpdateOfferV1",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OcpOfferApiServiceServer).UpdateOfferV1(ctx, req.(*UpdateOfferV1Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _OcpOfferApiService_TaskUpdateOfferV1_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TaskUpdateOfferV1Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OcpOfferApiServiceServer).TaskUpdateOfferV1(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ocp.offer.api.OcpOfferApiService/TaskUpdateOfferV1",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OcpOfferApiServiceServer).TaskUpdateOfferV1(ctx, req.(*TaskUpdateOfferV1Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _OcpOfferApiService_RemoveOfferV1_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveOfferV1Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OcpOfferApiServiceServer).RemoveOfferV1(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ocp.offer.api.OcpOfferApiService/RemoveOfferV1",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OcpOfferApiServiceServer).RemoveOfferV1(ctx, req.(*RemoveOfferV1Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _OcpOfferApiService_TaskRemoveOfferV1_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TaskRemoveOfferV1Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OcpOfferApiServiceServer).TaskRemoveOfferV1(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ocp.offer.api.OcpOfferApiService/TaskRemoveOfferV1",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OcpOfferApiServiceServer).TaskRemoveOfferV1(ctx, req.(*TaskRemoveOfferV1Request))
	}
	return interceptor(ctx, in, info, handler)
}

// OcpOfferApiService_ServiceDesc is the grpc.ServiceDesc for OcpOfferApiService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var OcpOfferApiService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "ocp.offer.api.OcpOfferApiService",
	HandlerType: (*OcpOfferApiServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateOfferV1",
			Handler:    _OcpOfferApiService_CreateOfferV1_Handler,
		},
		{
			MethodName: "TaskCreateOfferV1",
			Handler:    _OcpOfferApiService_TaskCreateOfferV1_Handler,
		},
		{
			MethodName: "MultiCreateOfferV1",
			Handler:    _OcpOfferApiService_MultiCreateOfferV1_Handler,
		},
		{
			MethodName: "TaskMultiCreateOfferV1",
			Handler:    _OcpOfferApiService_TaskMultiCreateOfferV1_Handler,
		},
		{
			MethodName: "DescribeOfferV1",
			Handler:    _OcpOfferApiService_DescribeOfferV1_Handler,
		},
		{
			MethodName: "ListOfferV1",
			Handler:    _OcpOfferApiService_ListOfferV1_Handler,
		},
		{
			MethodName: "UpdateOfferV1",
			Handler:    _OcpOfferApiService_UpdateOfferV1_Handler,
		},
		{
			MethodName: "TaskUpdateOfferV1",
			Handler:    _OcpOfferApiService_TaskUpdateOfferV1_Handler,
		},
		{
			MethodName: "RemoveOfferV1",
			Handler:    _OcpOfferApiService_RemoveOfferV1_Handler,
		},
		{
			MethodName: "TaskRemoveOfferV1",
			Handler:    _OcpOfferApiService_TaskRemoveOfferV1_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/ocp-offer-api/ocp-offer-api.proto",
}
